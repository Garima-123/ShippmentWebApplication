@{ 
    Layout = null;
}

@model IEnumerable<ShippmentWebApplication.Models.Sender>

@{
    ViewBag.Title = "Sender";
}
<!DOCTYPE html>
 
<html>
<head>
    <title>Sender</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/js/bootstrap.bundle.js'></script> 
        
    
</head>
<body>

    <div class="panel-group">
        <div class="panel panel-danger">
            <div class="panel-heading" style="text-align:center"><h2>Shipment List</h2>
                </div>
            <div class="panel-body">
                <div style="float:right;padding-bottom: 10px"><button id="btnStart" type="button"  class="btn btn-success" onclick="location.href='@Url.Action("Save", "Add")'"  >Create Shipment</button></div>
                <table class="table table-hover table-responsive" id="dtBasicExample">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.SenderId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SenderName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RecipientAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Expedited)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Shipment)
                        </th>
                        <th>@Html.DisplayNameFor(model => model.Action)</th>
                    </tr>
                    @foreach (ShippmentWebApplication.Models.Sender item in Model)
                    {
                        <tr>
                            <td>
                               
                   @Html.DisplayFor(modelItem => item.SenderId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SenderName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RecipientAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Expedited)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Shipment)
                            </td>
                            <td>
                                <div class="delete-section">
                                    <a class="delete-link" href="@Url.Action("Delete", new {id = item.SenderId})">Delete</a>
                                    <div class="btn btn-primary delete-confirm" style="display:none" data-delete-id="@item.SenderId">Confirm Delete</div>
                                </div>                            </td>
                        </tr>
                    }
                </table>
                <ul class="pager">
                    <li class="previous"><a href="#">Previous</a></li>
                    <li class="next"><a href="#">Next</a></li>
                </ul>
            </div>
        </div>
    </div>
    <script type="text/javascript">
       
    $(function () {
        $("a.delete-link").click(function () {
            var deleteLink = $(this);
            deleteLink.hide();
            var confirmButton = deleteLink.siblings(".delete-confirm");
            confirmButton.show();

            var cancelDelete =  function () {
                removeEvents();
                showDeleteLink();
            };

            var deleteItem = function () {
                removeEvents();
                confirmButton.hide();
                $.post(
                    '@Url.Action("Delete")',
                    AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                   .done(function () {
                       var parentRow = deleteLink.parents("tr:first");
                       parentRow.fadeOut('fast', function () {
                           parentRow.remove();
                       });
                   }).fail(function (data) {
                       alert("error");
                   });
                return false;
            };

            var removeEvents = function () {
                confirmButton.off("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).off("keypress", onKeyPress);
            };

            var showDeleteLink = function () {
                confirmButton.hide();
                deleteLink.show();
            };

            var onKeyPress = function (e) {
                //Cancel if escape key pressed
                if (e.which == 27) {
                    cancelDelete();
                }
            };

            confirmButton.on("click", deleteItem);
            $(document).on("click", cancelDelete);
            $(document).on("keypress", onKeyPress);

            return false;
        });

        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        };
    });
    </script>
    
</body>
</html>
